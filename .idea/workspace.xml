<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_TEST_SOURCES" value="false" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1b189690-b15e-45cf-8c2a-08f4a25d4a66" name="Default" comment="[bld] Enable Jacoco code coverage">
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_3.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_3.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_28.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/example_logback.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/example_logback/example_logback_main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/example_logback/example_logback_test.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/example_logback/slf4j-toys-root-example_logback_main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/example_logback/slf4j-toys-root-example_logback_test.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/examples/slf4j-toys-root-examples_main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/examples/slf4j-toys-root-examples_test.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys/org.usefultoys-slf4j-toys_main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys/org.usefultoys-slf4j-toys_test.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_21.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/examples/examples.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/examples/examples.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/examples/examples_main.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/examples/examples_main.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/examples/examples_test.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/examples/examples_test.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/slf4j-toys-root.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys-root.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys_main.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys_main.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys_test.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/slf4j-toys/slf4j-toys_test.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/settings.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/settings.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/slf4j-toys/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/slf4j-toys/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/meter/Meter.java" beforeDir="false" afterPath="$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/meter/Meter.java" afterDir="false" />
    </list>
    <list id="ec0cd797-066d-492e-b93c-a2d7eafa0a6b" name="[dvl] Logback converter for Meter status." comment="">
      <change afterPath="$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/logback/MeterConverter.java" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/slf4j-toys">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="slf4j-toys-root" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FavoritesManager">
    <favorites_list name="slf4j-toys-root" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleExtensions">
    <project path="$PROJECT_DIR$">
      <sub-project>
        <project path="$PROJECT_DIR$">
          <extensions>
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="license" type="nl.javadude.gradle.plugins.license.LicenseExtension" />
            <ext name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicensesExtension" />
            <prop name="ossrhUsername" />
            <prop name="ossrhPassword" />
            <task name="licenseFormatTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of root project 'slf4j-toys-root'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="wrapper" type="org.gradle.api.tasks.wrapper.Wrapper">Generates Gradle wrapper files. [incubating]&lt;p&gt;&lt;i&gt;Task group: Build Setup&lt;i&gt;</task>
            <task name="jacocoTestCoverageVerification" type="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification">Verifies code coverage metrics based on specified rules for the test task.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="sourcesJar" type="org.gradle.api.tasks.bundling.Jar">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of root project 'slf4j-toys-root'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from root project 'slf4j-toys-root' (some of the displayed tasks may belong to subprojects).&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="init" type="org.gradle.buildinit.tasks.InitBuild">Initializes a new Gradle build. [incubating]&lt;p&gt;&lt;i&gt;Task group: Build Setup&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="javadocJar" type="org.gradle.api.tasks.bundling.Jar">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in root project 'slf4j-toys-root'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="licenseFormat">Applies the license found in the header file in files missing the header.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="license">Checks for header consistency.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="install" type="org.gradle.api.tasks.Upload">Installs the 'archives' artifacts into the local Maven repository.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="licenseFormatMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="licenseTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="ideaProject" type="org.gradle.plugins.ide.idea.GenerateIdeaProject">Generates IDEA project file (IPR)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by root project 'slf4j-toys-root'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in root project 'slf4j-toys-root'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in root project 'slf4j-toys-root'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicenses">Generates reports on your runtime dependencies.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="signArchives" type="org.gradle.plugins.signing.Sign">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="licenseMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="cleanIdea">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaWorkspace" type="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace">Generates an IDEA workspace file (IWS)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="versionDisplay" type="net.nemerosa.versioning.tasks.VersionDisplayTask">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in root project 'slf4j-toys-root'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="jacocoTestReport" type="org.gradle.testing.jacoco.tasks.JacocoReport">Generates code coverage report for the test task.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="cleanIdeaProject" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="versionFile" type="net.nemerosa.versioning.tasks.VersionFileTask">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="uploadArchives" type="org.gradle.api.tasks.Upload">Uploads all artifacts belonging to configuration ':slf4j-toys:archives'&lt;p&gt;&lt;i&gt;Task group: upload&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of root project 'slf4j-toys-root'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdeaWorkspace" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/examples">
          <extensions parent="$PROJECT_DIR$">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="license" type="nl.javadude.gradle.plugins.license.LicenseExtension" />
            <ext name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicensesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <prop name="ossrhUsername" />
            <prop name="ossrhPassword" />
            <task name="licenseFormatTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':examples'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':examples'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicenses">Generates reports on your runtime dependencies.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':examples'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="licenseMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdea">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="licenseFormat">Applies the license found in the header file in files missing the header.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="license">Checks for header consistency.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="licenseFormatMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="licenseTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':examples'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation ' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly ' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation ' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly ' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/slf4j-toys">
          <extensions parent="$PROJECT_DIR$">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="versioning" type="net.nemerosa.versioning.VersioningExtension" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="license" type="nl.javadude.gradle.plugins.license.LicenseExtension" />
            <ext name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicensesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="signing" type="org.gradle.plugins.signing.SigningExtension" />
            <ext name="jacoco" type="org.gradle.testing.jacoco.plugins.JacocoPluginExtension" />
            <prop name="ossrhUsername" />
            <prop name="ossrhPassword" />
            <task name="licenseFormatTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':slf4j-toys'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':slf4j-toys'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="jacocoTestCoverageVerification" type="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification">Verifies code coverage metrics based on specified rules for the test task.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="sourcesJar" type="org.gradle.api.tasks.bundling.Jar">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="downloadLicenses" type="nl.javadude.gradle.plugins.license.DownloadLicenses">Generates reports on your runtime dependencies.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="signArchives" type="org.gradle.plugins.signing.Sign">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':slf4j-toys'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="licenseMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdea">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="versionDisplay" type="net.nemerosa.versioning.tasks.VersionDisplayTask">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="javadocJar" type="org.gradle.api.tasks.bundling.Jar">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="jacocoTestReport" type="org.gradle.testing.jacoco.tasks.JacocoReport">Generates code coverage report for the test task.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="licenseFormat">Applies the license found in the header file in files missing the header.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="license">Checks for header consistency.&lt;p&gt;&lt;i&gt;Task group: License&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="install" type="org.gradle.api.tasks.Upload">Installs the 'archives' artifacts into the local Maven repository.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="versionFile" type="net.nemerosa.versioning.tasks.VersionFileTask">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="licenseFormatMain" type="nl.javadude.gradle.plugins.license.License">Scanning license on main files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="licenseTest" type="nl.javadude.gradle.plugins.license.License">Scanning license on test files&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="uploadArchives" type="org.gradle.api.tasks.Upload">Uploads all artifacts belonging to configuration ':slf4j-toys:archives'&lt;p&gt;&lt;i&gt;Task group: upload&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':slf4j-toys'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation ' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="jacocoAgent" visible="false">The Jacoco agent to use to get coverage data.</conf>
            <conf name="jacocoAnt" visible="false">The Jacoco ant tasks to use to get execute Gradle tasks.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly ' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="signatures" />
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation ' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly ' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
      </sub-project>
    </project>
  </component>
  <component name="ProjectId" id="1RYalt5Brm112ScmBnWyV3REDhr" />
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
          <State>
            <id>Cloning issuesJava</id>
          </State>
          <State>
            <id>Code maturity issuesJava</id>
          </State>
          <State>
            <id>Control flow issuesJava</id>
          </State>
          <State>
            <id>General</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>Numeric issuesJava</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>InconsistentLineSeparators</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="extract.method.default.visibility" value="public" />
    <property name="js.eslint.eslintPackage" value="" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/example_logback/src/main/java" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.37009543" />
    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.project.gradle" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\x7ws\git\slf4j-toys\example_logback\src\main\java" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.ExecutionName">
    <configuration default="true" type="Applet">
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExecutionName" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.usefultoys.slf4j.examples.ExecutionName" />
      <module name="examples_main" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.usefultoys.slf4j.examples.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="slf4j-toys:slf4j-toys [compileJava]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/slf4j-toys" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="compileJava" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="MeterIdentifierOverflowTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="slf4j-toys_test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.usefultoys.slf4j.meter.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.usefultoys.slf4j.meter" />
      <option name="MAIN_CLASS_NAME" value="org.usefultoys.slf4j.meter.MeterIdentifierOverflowTest" />
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/slf4j-toys" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MeterIdentifierOverflowTest.testResetImpl" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="slf4j-toys_test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.usefultoys.slf4j.meter.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.usefultoys.slf4j.meter" />
      <option name="MAIN_CLASS_NAME" value="org.usefultoys.slf4j.meter.MeterIdentifierOverflowTest" />
      <option name="METHOD_NAME" value="testResetImpl" />
      <option name="TEST_OBJECT" value="method" />
      <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/slf4j-toys" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="org.usefultoys.slf4j.meter in slf4j-toys_test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="slf4j-toys_test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.usefultoys.slf4j.meter.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.usefultoys.slf4j.meter" />
      <option name="TEST_OBJECT" value="package" />
      <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/slf4j-toys" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType" factoryName="Kotlin script">
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file enabled="true" id="idea.log" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="js.build_tools.gulp">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.ExecutionName" />
      <item itemvalue="Gradle.slf4j-toys:slf4j-toys [compileJava]" />
      <item itemvalue="JUnit.MeterIdentifierOverflowTest" />
      <item itemvalue="JUnit.MeterIdentifierOverflowTest.testResetImpl" />
      <item itemvalue="JUnit.org.usefultoys.slf4j.meter in slf4j-toys_test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ExecutionName" />
        <item itemvalue="JUnit.org.usefultoys.slf4j.meter in slf4j-toys_test" />
        <item itemvalue="JUnit.MeterIdentifierOverflowTest" />
        <item itemvalue="JUnit.MeterIdentifierOverflowTest.testResetImpl" />
        <item itemvalue="Gradle.slf4j-toys:slf4j-toys [compileJava]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1b189690-b15e-45cf-8c2a-08f4a25d4a66" name="Default" comment="" />
      <changelist id="ec0cd797-066d-492e-b93c-a2d7eafa0a6b" name="[dvl] Logback converter for Meter status." comment="" />
      <created>1488740783947</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1488740783947</updated>
      <workItem from="1488740785281" duration="3455000" />
      <workItem from="1488748728475" duration="2843000" />
      <workItem from="1488807159442" duration="578000" />
      <workItem from="1488807771817" duration="82000" />
      <workItem from="1488807876931" duration="76000" />
      <workItem from="1488807985979" duration="335000" />
      <workItem from="1488808667648" duration="614000" />
      <workItem from="1488829370325" duration="2445000" />
      <workItem from="1488975481512" duration="51000" />
      <workItem from="1491835102797" duration="2783000" />
      <workItem from="1491878569397" duration="1332000" />
      <workItem from="1569846714779" duration="1979000" />
      <workItem from="1569858161816" duration="5611000" />
      <workItem from="1569870437113" duration="6180000" />
      <workItem from="1569877156416" duration="1357000" />
    </task>
    <task id="LOCAL-00001" summary="[bld] Enable Jacoco code coverage">
      <created>1488743200471</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1488743200471</updated>
    </task>
    <task id="LOCAL-00002" summary="[bld] Enable versioning.">
      <created>1488744380571</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1488744380571</updated>
    </task>
    <task id="LOCAL-00003" summary="[tst] Simpler unit tests.">
      <created>1569876450638</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1569876450638</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="MeterIdentifierAttributesTest - 2017.04.10 at 23h 36m 26s.xml">
      <configuration name="MeterIdentifierAttributesTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest - 2017.04.10 at 23h 36m 39s.xml">
      <configuration name="MeterIdentifierOverflowTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest - 2017.04.10 at 23h 44m 16s.xml">
      <configuration name="MeterIdentifierOverflowTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest - 2017.04.10 at 23h 44m 35s.xml">
      <configuration name="MeterIdentifierOverflowTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest - 2017.04.10 at 23h 51m 31s.xml">
      <configuration name="MeterIdentifierOverflowTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest - 2017.04.10 at 23h 54m 17s.xml">
      <configuration name="MeterIdentifierOverflowTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest_testResetImpl - 2017.04.10 at 23h 40m 01s.xml">
      <configuration name="MeterIdentifierOverflowTest.testResetImpl" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest_testResetImpl - 2017.04.10 at 23h 47m 14s.xml">
      <configuration name="MeterIdentifierOverflowTest.testResetImpl" configurationId="JUnit" />
    </history-entry>
    <history-entry file="MeterIdentifierOverflowTest_testResetImpl - 2017.04.10 at 23h 48m 43s.xml">
      <configuration name="MeterIdentifierOverflowTest.testResetImpl" configurationId="JUnit" />
    </history-entry>
    <history-entry file="org_usefultoys_slf4j_meter_in_slf4j-toys_test - 2017.04.10 at 23h 54m 58s.xml">
      <configuration name="org.usefultoys.slf4j.meter in slf4j-toys_test" configurationId="JUnit" />
    </history-entry>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="EXTERNAL G:/slf4j-toys">
          <value>
            <State />
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[bld] Enable Jacoco code coverage" />
    <MESSAGE value="[bld] Enable versioning." />
    <MESSAGE value="[tst] Simpler unit tests." />
    <option name="LAST_COMMIT_MESSAGE" value="[tst] Simpler unit tests." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/EventData.java</url>
          <line>205</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/EventData.java</url>
          <line>222</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/EventData.java</url>
          <line>218</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/EventData.java</url>
          <line>224</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/EventData.java</url>
          <line>216</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/test/java/org/usefultoys/slf4j/meter/MeterIdentifierOverflowTest.java</url>
          <line>64</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/meter/Meter.java</url>
          <line>605</line>
          <option name="timeStamp" value="18" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/meter/Meter.java</url>
          <line>587</line>
          <option name="timeStamp" value="19" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/test/java/org/slf4j/impl/TestLogger.java</url>
          <line>411</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/meter/Meter.java</url>
          <line>816</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/slf4j-toys/src/main/java/org/usefultoys/slf4j/internal/Config.java</url>
          <option name="timeStamp" value="22" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
</project>